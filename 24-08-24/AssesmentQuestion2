******QUESTION 2*******

Problem Statement: Advanced Inheritance and Interface in Patient Care System
- Define a base class: `CareProvider` with properties:
- `ProviderID` (integer), `ProviderName` (string)
- Method: `ProvideCare()` (virtual, void)
- Define an interface: `IEmergencyResponder` with the following method:
- `RespondToEmergency()` (void)
- Define a derived class: `Nurse` that inherits from `CareProvider` and implements `IEmergencyResponder`:
- Additional Property: `ShiftTiming` (string)
- Implement `ProvideCare()` to display care provided during the shift.
- Implement `RespondToEmergency()` to handle emergency situations.
- Define another derived class: `Doctor` that also inherits from `CareProvider` and implements `IEmergencyResponder`:
- Additional Property: `Specialization` (string)
- Implement `ProvideCare()` to display care based on specialization.
- Implement `RespondToEmergency()` to handle critical emergency situations.
- Tasks:
1. Care Management:
- Read details for N `careProviders` (both Nurses and Doctors).
2. Emergency Response:
- Implement a method to simulate an emergency and call `RespondToEmergency()` for each care provider.
3. Care Providing:
- Display details of care provided by each provider using the overridden `ProvideCare()` method


*******ANSWER********


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


public class CareProvider
{
    public int ProviderID { get; set; }
    public string ProviderName { get; set; }

    public virtual void ProvideCare()
    {
        Console.WriteLine("Providing general care.");
    }
}

public interface IEmergencyResponder {

    void RespondToEmergency();
}

public class Nurse:CareProvider,IEmergencyResponder
{
    public string ShiftTiming { get; set; }
    public override void ProvideCare()
    {
        Console.WriteLine($"Nurse {ProviderName} is providing care during the {ShiftTiming} shift.");
    }
    public void RespondToEmergency()
    {
        Console.WriteLine($"Nurse {ProviderName} is responding to an emergency during the {ShiftTiming} shift.");
    }

}

public class Doctor: CareProvider, IEmergencyResponder
{
    public string Specialization { get; set; }
    public override void ProvideCare()
    {
        Console.WriteLine($"Doctor {ProviderName}, specializing in {Specialization}");
    }
    public void RespondToEmergency()
    {
        Console.WriteLine($"Doctor {ProviderName}, specializing in {Specialization}, is responding to a critical emergency.");
    }
}


class DisplayCareProvided
{
    public  DisplayCareProvided(List<CareProvider> careProviders)
    {
        Console.WriteLine("\nDisplaying care provided by each care provider:");
        foreach (var provider in careProviders)
        {
            provider.ProvideCare();
        }
    }
}
class EmergencyResponder
{
    public EmergencyResponder(List<CareProvider> careProviders)
    {
        Console.WriteLine("\nSimulating an emergency...");
        foreach (var provider in careProviders)
        {
            if (provider is IEmergencyResponder responder)
            {
                responder.RespondToEmergency();
            }
        }
    }
}


class Program
{
    static void Main()
    {


        List<CareProvider> careProviders = new List<CareProvider>();
        Console.WriteLine("Enter the number of care providers:");
        int N = int.Parse(Console.ReadLine());

        for (int i = 0; i < N; i++)
        {
            Console.WriteLine("\nEnter details for care provider " + (i + 1) + ":");
            Console.WriteLine("Is the care provider a Nurse or a Doctor? (N/D):");
            char type = Console.ReadKey().KeyChar;
            Console.WriteLine();

            Console.WriteLine("Enter Provider ID:");
            int id = int.Parse(Console.ReadLine());

            Console.WriteLine("Enter Provider Name:");
            string name = Console.ReadLine();

            if (type == 'N' || type == 'n')
            {
                Console.WriteLine("Enter Shift Timing:");
                string shift = Console.ReadLine();

                Nurse nurse = new Nurse
                {
                    ProviderID = id,
                    ProviderName = name,
                    ShiftTiming = shift
                };
                careProviders.Add(nurse);

            }
            else if (type == 'D' || type == 'd')
            {
                Console.WriteLine("Enter Specialization:");
                string specialization = Console.ReadLine();

                Doctor doctor = new Doctor
                {
                    ProviderID = id,
                    ProviderName = name,
                    Specialization = specialization
                };
                careProviders.Add(doctor);
            }
            else
            {
                Console.WriteLine("Invalid input. Please enter 'N' for Nurse or 'D' for Doctor.");
                i--; 
            }
        }
        EmergencyResponder emergencyResponder = new EmergencyResponder(careProviders);
        DisplayCareProvided displayCareProvided = new DisplayCareProvided(careProviders);

    }
}

********ANSWER************

Enter the number of care providers:
3

Enter details for care provider 1:
Is the care provider a Nurse or a Doctor? (N/D):
D
Enter Provider ID:
1
Enter Provider Name:
collin
Enter Specialization:
dentist

Enter details for care provider 2:
Is the care provider a Nurse or a Doctor? (N/D):
D
Enter Provider ID:
2
Enter Provider Name:
alan
Enter Specialization:
surgeon

Enter details for care provider 3:
Is the care provider a Nurse or a Doctor? (N/D):
N
Enter Provider ID:
3
Enter Provider Name:
mariya
Enter Shift Timing:
12

Simulating an emergency...
Doctor collin, specializing in dentist, is responding to a critical emergency.
Doctor alan, specializing in surgeon, is responding to a critical emergency.
Nurse mariya is responding to an emergency during the 12 shift.

Displaying care provided by each care provider:
Doctor collin, specializing in dentist
Doctor alan, specializing in surgeon
Nurse mariya is providing care during the 12 shift.
Press any key to continue . . .





