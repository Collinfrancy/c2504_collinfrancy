                                                                                        *****QUESTION 1****

Find Employees with No Manager
Problem:
Given an `Employees` table
with columns `EmployeeID`, `Name`, and `ManagerID`
(which refers to `EmployeeID` of the manager),
find all employees who do not have a manager.

Table Structure:
```
CREATE TABLE Employees (
EmployeeID INT,
Name VARCHAR(100),
ManagerID INT
);


*****ANSWER*****

CREATE TABLE Employees (
    EmployeeID INT PRIMARY KEY,
    Name VARCHAR(100),
    ManagerID INT
);

-- Insert sample data into the Employees table
INSERT INTO Employees (EmployeeID, Name, ManagerID) VALUES (1, 'Alice', NULL);
INSERT INTO Employees (EmployeeID, Name, ManagerID) VALUES (2, 'Bob', 1);
INSERT INTO Employees (EmployeeID, Name, ManagerID) VALUES (3, 'Charlie', 1);
INSERT INTO Employees (EmployeeID, Name, ManagerID) VALUES (4, 'David', 2);
INSERT INTO Employees (EmployeeID, Name, ManagerID) VALUES (5, 'Eva', 2);
INSERT INTO Employees (EmployeeID, Name, ManagerID) VALUES (6, 'Frank', NULL);


SELECT EmployeeID,Name
FROM Employees
WHERE ManagerID IS NULL;



EmployeeID	Name
1         	Alice
6         	Frank

                                                                          *****QUESTION 2****

Find Orders with the Largest Order Value
Problem: Given an `Orders` table
with columns `OrderID`, `CustomerID`, and `OrderValue`,
find the order with the largest order value.

*****ANSWER 2*****

CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    CustomerID INT,
    OrderValue DECIMAL(10, 2)
);

-- Insert sample data into the Orders table
INSERT INTO Orders (OrderID, CustomerID, OrderValue) VALUES (1, 101, 250.00);
INSERT INTO Orders (OrderID, CustomerID, OrderValue) VALUES (2, 102, 450.50);
INSERT INTO Orders (OrderID, CustomerID, OrderValue) VALUES (3, 103, 300.75);
INSERT INTO Orders (OrderID, CustomerID, OrderValue) VALUES (4, 104, 450.50);
INSERT INTO Orders (OrderID, CustomerID, OrderValue) VALUES (5, 105, 150.00);


SELECT OrderID,CustomerID,OrderValue AS LargestOrderValue
FROM Orders
WHERE OrderValue IN (SELECT MAX(OrderValue) FROM Orders);



OrderID	CustomerID	LargestOrderValue
2	       102      	450.50
4        104       	450.50

                                                               *****QUESTION 3****

Find Customers with Multiple Orders
Problem: Given a `Customers` table and an `Orders` table
where `Orders` contains a `CustomerID`,
find customers who have placed more than one order.

Table Structure:
```
CREATE TABLE Customers (
CustomerID INT,
Name VARCHAR(100)
);

CREATE TABLE Orders (
OrderID INT,
CustomerID INT,
OrderDate DATE
);
```
*****ANSWER 3*****

-- Create the Customers table
CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    Name VARCHAR(100)
);

-- Create the Orders table
CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    CustomerID INT,
    OrderDate DATE,
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

-- Insert sample data into the Customers table
INSERT INTO Customers (CustomerID, Name) VALUES (1, 'Alice');
INSERT INTO Customers (CustomerID, Name) VALUES (2, 'Bob');
INSERT INTO Customers (CustomerID, Name) VALUES (3, 'Charlie');
INSERT INTO Customers (CustomerID, Name) VALUES (4, 'David');

-- Insert sample data into the Orders table
INSERT INTO Orders (OrderID, CustomerID, OrderDate) VALUES (1, 1, '2024-01-01');
INSERT INTO Orders (OrderID, CustomerID, OrderDate) VALUES (2, 1, '2024-02-01');
INSERT INTO Orders (OrderID, CustomerID, OrderDate) VALUES (3, 2, '2024-01-15');
INSERT INTO Orders (OrderID, CustomerID, OrderDate) VALUES (4, 3, '2024-01-20');
INSERT INTO Orders (OrderID, CustomerID, OrderDate) VALUES (5, 4, '2024-02-10');
INSERT INTO Orders (OrderID, CustomerID, OrderDate) VALUES (6, 3, '2024-02-20');


SELECT c.CustomerID, c.Name, COUNT(o.OrderID) AS OrderCount
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerID, c.Name
HAVING COUNT(o.OrderID) > 1;


CustomerID	Name 	  OrderCount
1         	Alice	   2
3	         Charlie	 2


                                                                      *****QUESTION 4****

Find the Day with the Highest Sales
Problem: Given a `Sales` table
with columns `SaleAmount` and `SaleDate`,
find the day with the highest total sales.

*****ANSWER 4*****

-- Create the Sales table
CREATE TABLE Sales (
    SaleAmount DECIMAL(10, 2),
    SaleDate DATE
);

-- Insert sample data into the Sales table
INSERT INTO Sales (SaleAmount, SaleDate) VALUES (100.00, '2024-01-01');
INSERT INTO Sales (SaleAmount, SaleDate) VALUES (150.00, '2024-01-01');
INSERT INTO Sales (SaleAmount, SaleDate) VALUES (200.00, '2024-01-02');
INSERT INTO Sales (SaleAmount, SaleDate) VALUES (50.00, '2024-01-03');
INSERT INTO Sales (SaleAmount, SaleDate) VALUES (300.00, '2024-01-02');
INSERT INTO Sales (SaleAmount, SaleDate) VALUES (75.00, '2024-01-03');


SELECT SaleDate, SUM(SaleAmount) AS TotalSales
FROM Sales
GROUP BY SaleDate
ORDER BY TotalSales DESC
LIMIT 1;



SaleDate	  TotalSales
2024-01-02	500.00



                                                                               *****QUESTION 5****

Find the Average Salary by Department
Problem: Given an `Employees` table
with columns `EmployeeID`, `DepartmentID`, and `Salary`,
find the average salary for each department.

Table Structure:
```
CREATE TABLE Employees (
EmployeeID INT,
DepartmentID INT,
Salary DECIMAL(10, 2)
);
```

*****ANSWER 5*****  

CREATE TABLE Employees (
    EmployeeID INT,
    DepartmentID INT,
    Salary DECIMAL(10, 2)
);

-- Insert sample data into the Employees table
INSERT INTO Employees (EmployeeID, DepartmentID, Salary) VALUES (1, 10, 50000.00);
INSERT INTO Employees (EmployeeID, DepartmentID, Salary) VALUES (2, 10, 60000.00);
INSERT INTO Employees (EmployeeID, DepartmentID, Salary) VALUES (3, 20, 55000.00);
INSERT INTO Employees (EmployeeID, DepartmentID, Salary) VALUES (4, 20, 65000.00);
INSERT INTO Employees (EmployeeID, DepartmentID, Salary) VALUES (5, 30, 70000.00);
INSERT INTO Employees (EmployeeID, DepartmentID, Salary) VALUES (6, 30, 80000.00);

SELECT DepartmentID ,AVG(Salary) AS AverageSalary
FROM Employees
GROUP BY DepartmentID ;


DepartmentID	AverageSalary
10	           55000.00
20	           60000.00
30	           75000.00











